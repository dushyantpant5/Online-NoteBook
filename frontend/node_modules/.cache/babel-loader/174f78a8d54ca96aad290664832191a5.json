{"ast":null,"code":"var _jsxFileName = \"/Users/dushyantpant/Desktop/Personal Project/React Course/iNotes/frontend/src/context/notes/NotesState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport NotesContext from \"./notesContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesState = props => {\n  _s();\n  const host = \"http://localhost:5500\";\n  const notesInitial = [];\n  const [notes, setnotes] = useState(notesInitial);\n\n  //Get all notes\n  const getNotes = async () => {\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: \"GET\",\n      headers: {\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjM0ZWY3N2NhOWIxZWM4OWE5MDQ1NDkzIn0sImlhdCI6MTY2NjIwNzQzOX0.UPorDoQPsWVs4YrvL2ITKG7rTE5xdnjOv02Xmty8Fis\"\n      }\n    });\n    const json = response.json();\n    const note = {\n      _id: \"6359ee09417e27064a601b8f\",\n      user: \"634ef77ca9b1ec89a9045493\",\n      title: title,\n      description: description,\n      tag: tag,\n      date: \"2022-10-27T02:33:45.949Z\",\n      __v: 0\n    };\n    setnotes(notes.concat(note));\n  };\n\n  //Add a note\n  const addNote = async (title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjM0ZWY3N2NhOWIxZWM4OWE5MDQ1NDkzIn0sImlhdCI6MTY2NjIwNzQzOX0.UPorDoQPsWVs4YrvL2ITKG7rTE5xdnjOv02Xmty8Fis\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n    const note = {\n      _id: \"6359ee09417e27064a601b8f\",\n      user: \"634ef77ca9b1ec89a9045493\",\n      title: title,\n      description: description,\n      tag: tag,\n      date: \"2022-10-27T02:33:45.949Z\",\n      __v: 0\n    };\n    setnotes(notes.concat(note));\n  };\n  //Delete a note\n  const delNote = id => {\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setnotes(newNotes);\n  };\n  //Edit a note\n  const editNote = async (id, title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjM0ZWY3N2NhOWIxZWM4OWE5MDQ1NDkzIn0sImlhdCI6MTY2NjIwNzQzOX0.UPorDoQPsWVs4YrvL2ITKG7rTE5xdnjOv02Xmty8Fis\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NotesContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      delNote,\n      editNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(NotesState, \"17KTT0fQ15Y6l1fhXF3AS0rkCqo=\");\n_c = NotesState;\nexport default NotesState;\nvar _c;\n$RefreshReg$(_c, \"NotesState\");","map":{"version":3,"names":["React","useState","NotesContext","NotesState","props","host","notesInitial","notes","setnotes","getNotes","response","fetch","method","headers","json","note","_id","user","title","description","tag","date","__v","concat","addNote","body","JSON","stringify","delNote","id","newNotes","filter","editNote","index","length","element","children"],"sources":["/Users/dushyantpant/Desktop/Personal Project/React Course/iNotes/frontend/src/context/notes/NotesState.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport NotesContext from \"./notesContext\";\n\nconst NotesState = (props) => {\n  const host = \"http://localhost:5500\";\n  const notesInitial = [];\n\n  const [notes, setnotes] = useState(notesInitial);\n\n  //Get all notes\n  const getNotes = async () => {\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: \"GET\",\n      headers: {\n        \"auth-token\":\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjM0ZWY3N2NhOWIxZWM4OWE5MDQ1NDkzIn0sImlhdCI6MTY2NjIwNzQzOX0.UPorDoQPsWVs4YrvL2ITKG7rTE5xdnjOv02Xmty8Fis\",\n      }\n    });\n    const json = response.json();\n\n    const note = {\n      _id: \"6359ee09417e27064a601b8f\",\n      user: \"634ef77ca9b1ec89a9045493\",\n      title: title,\n      description: description,\n      tag: tag,\n      date: \"2022-10-27T02:33:45.949Z\",\n      __v: 0,\n    };\n    setnotes(notes.concat(note));\n  };\n\n  //Add a note\n  const addNote = async (title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\":\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjM0ZWY3N2NhOWIxZWM4OWE5MDQ1NDkzIn0sImlhdCI6MTY2NjIwNzQzOX0.UPorDoQPsWVs4YrvL2ITKG7rTE5xdnjOv02Xmty8Fis\",\n      },\n      body: JSON.stringify({ title, description, tag }),\n    });\n    const json = response.json();\n\n    const note = {\n      _id: \"6359ee09417e27064a601b8f\",\n      user: \"634ef77ca9b1ec89a9045493\",\n      title: title,\n      description: description,\n      tag: tag,\n      date: \"2022-10-27T02:33:45.949Z\",\n      __v: 0,\n    };\n    setnotes(notes.concat(note));\n  };\n  //Delete a note\n  const delNote = (id) => {\n    const newNotes = notes.filter((note) => {\n      return note._id !== id;\n    });\n    setnotes(newNotes);\n  };\n  //Edit a note\n  const editNote = async (id, title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\":\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjM0ZWY3N2NhOWIxZWM4OWE5MDQ1NDkzIn0sImlhdCI6MTY2NjIwNzQzOX0.UPorDoQPsWVs4YrvL2ITKG7rTE5xdnjOv02Xmty8Fis\",\n      },\n      body: JSON.stringify({ title, description, tag }),\n    });\n    const json = response.json();\n\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n  };\n\n  return (\n    <NotesContext.Provider\n      value={{ notes, addNote, delNote, editNote, getNotes }}\n    >\n      {props.children}\n    </NotesContext.Provider>\n  );\n};\n\nexport default NotesState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}