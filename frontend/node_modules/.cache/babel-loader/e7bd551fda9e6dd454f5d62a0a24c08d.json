{"ast":null,"code":"var _jsxFileName = \"/Users/dushyantpant/Desktop/Personal Project/React Course/iNotes/frontend/src/context/notes/NotesState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport NotesContext from \"./notesContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesState = props => {\n  _s();\n  const host = \"http://localhost:5500\";\n  const notesInitial = [];\n  const [notes, setnotes] = useState(notesInitial);\n\n  //Get all notes\n  const getNotes = async () => {\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: \"GET\",\n      headers: {\n        \"auth-token\": localStorage.getItem('token')\n      }\n    });\n    const json = await response.json();\n    setnotes(json);\n  };\n\n  //Add a note\n  const addNote = async (title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const note = await response.json();\n    setnotes(notes.concat(note));\n  };\n  //Delete a note\n  const delNote = async id => {\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n      }\n    });\n    const json = response.json();\n    console.log(json);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setnotes(newNotes);\n  };\n  //Edit a note\n  const editNote = async (id, title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n    let newNote = JSON.parse(JSON.stringify(notes));\n    for (let index = 0; index < newNote.length; index++) {\n      const element = newNote[index];\n      if (element._id === id) {\n        newNote[index].title = title;\n        newNote[index].description = description;\n        newNote[index].tag = tag;\n        break;\n      }\n      setnotes(newNote);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NotesContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      delNote,\n      editNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(NotesState, \"17KTT0fQ15Y6l1fhXF3AS0rkCqo=\");\n_c = NotesState;\nexport default NotesState;\nvar _c;\n$RefreshReg$(_c, \"NotesState\");","map":{"version":3,"names":["React","useState","NotesContext","NotesState","props","host","notesInitial","notes","setnotes","getNotes","response","fetch","method","headers","localStorage","getItem","json","addNote","title","description","tag","body","JSON","stringify","note","concat","delNote","id","console","log","newNotes","filter","_id","editNote","newNote","parse","index","length","element","children"],"sources":["/Users/dushyantpant/Desktop/Personal Project/React Course/iNotes/frontend/src/context/notes/NotesState.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport NotesContext from \"./notesContext\";\n\nconst NotesState = (props) => {\n  const host = \"http://localhost:5500\";\n  const notesInitial = [];\n\n  const [notes, setnotes] = useState(notesInitial);\n\n  //Get all notes\n  const getNotes = async () => {\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: \"GET\",\n      headers: {\n        \"auth-token\": localStorage.getItem('token')\n      }\n    });\n    const json = await response.json();\n    setnotes(json);\n  };\n\n  //Add a note\n  const addNote = async (title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n      },\n      body: JSON.stringify({ title, description, tag }),\n    });\n    const note = await response.json();\n\n    setnotes(notes.concat(note));\n  };\n  //Delete a note\n  const delNote = async (id) => {\n    \n     const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n      }\n    });\n    const json = response.json();\n    console.log(json);\n    \n    const newNotes = notes.filter((note) => {\n      return note._id !== id;\n    });\n    setnotes(newNotes);\n  };\n  //Edit a note\n  const editNote = async (id, title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n      },\n      body: JSON.stringify({ title, description, tag }),\n    });\n    const json =  response.json();\n\n    let newNote = JSON.parse(JSON.stringify(notes));\n\n\n    for (let index = 0; index < newNote.length; index++) {\n      const element = newNote[index];\n      if (element._id === id) {\n        newNote[index].title = title;\n        newNote[index].description = description;\n        newNote[index].tag = tag;\n        break;\n      }\n      setnotes(newNote);\n    }\n  };\n\n  return (\n    <NotesContext.Provider\n      value={{ notes, addNote, delNote, editNote, getNotes }}\n    >\n      {props.children}\n    </NotesContext.Provider>\n  );\n};\n\nexport default NotesState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}